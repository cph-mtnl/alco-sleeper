import { GetServerSideProps } from "next";
import Head from "next/head";

export interface AuthInfo {
  access_token: string;
  expires_in: number;
  scope: string;
  token_type: string | "Bear";
  user_id: string;
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const code = context.query.code;
  const client_id = process.env.CLIENT_ID;
  const secret = process.env.SECRET;
  // ask for a one week token
  const token_TTL = 604800;

  // this is base64 encoding of 'FITBIT_CLIENT_ID:FITBIT_CLIENT_SECRET'
  const base64_secret = Buffer.from(`${client_id}:${secret}`).toString(
    "base64"
  );

  const body = await fetch("https://api.fitbit.com/oauth2/token", {
    method: "POST",
    body:
      "grant_type=authorization_code" +
      `&client_id=${client_id}` +
      `&code=${code}` +
      `&expires_in=${token_TTL}`,
    headers: {
      "Content-Type": "application/x-www-form-urlencoded",
      Authorization: "Basic " + base64_secret,
    },
  })
    .then((response) => {
      console.log("token response", response);
      return response.json();
    })
    .then((body) => {
      console.log("body", body);
      return body;
    });

  return {
    props: body, // will be passed to the page component as props
  };
};

export default function callback({ access_token, scope, user_id }: AuthInfo) {
  console.log(access_token, user_id, scope);
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>Redirected</div>
    </>
  );
}
