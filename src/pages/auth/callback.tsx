import { AuthInfo, setAuthInfo } from "@/store/slices/authSlice";
import { GetServerSideProps } from "next";
import Head from "next/head";
import { useEffect } from "react";
import { useDispatch } from "react-redux";
import { useRouter } from "next/router";
import styles from "./callback.module.css";
import { CircularProgress } from "@mui/material";

/**
 * This is the Server Side render function,
 * after the OAuth2 process initiated from '/auth'
 * @param context
 * @returns
 */
export const getServerSideProps: GetServerSideProps<AuthInfo> = async (
  context
) => {
  // Get the code from the redirect, present in the browsers URL.
  const code = context.query.code;
  // Get secrets from .ENV
  const client_id = process.env.CLIENT_ID;
  const secret = process.env.SECRET;
  // ask for a one week token
  const token_TTL = 604800;

  // this is base64 encoding of 'FITBIT_CLIENT_ID:FITBIT_CLIENT_SECRET'
  const base64_secret = Buffer.from(`${client_id}:${secret}`).toString(
    "base64"
  );

  // Get Token etc. from Fitbit OAuth2 API
  const body = await fetch("https://api.fitbit.com/oauth2/token", {
    method: "POST",
    body:
      "grant_type=authorization_code" +
      `&client_id=${client_id}` +
      `&code=${code}` +
      `&expires_in=${token_TTL}`,
    headers: {
      "Content-Type": "application/x-www-form-urlencoded",
      Authorization: "Basic " + base64_secret,
    },
  }).then((response) => response.json());

  return {
    props: body, // will be passed to the page component as props
  };
};

export default function callback(props: AuthInfo) {
  const dispatch = useDispatch();
  const router = useRouter();

  useEffect(() => {
    dispatch(setAuthInfo(props));
    router.push("/");
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.container}>
        <div>Processing your login</div>
        <CircularProgress />
      </main>
    </>
  );
}
